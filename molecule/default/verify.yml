---
- name: Verify
  hosts: all
  become: true

  vars:
    conn_name: "wg_test"
    ifname: "wg_test"
    type: "wireguard"
    ip4: "10.42.43.2/32"
    wireguard:
      peer: "wireguard.example.com"
      peer-port: "51820"
      allowed-ips: "10.10.10.0/24"
      private-key: "gDdP5JHM6VQQOeGZPLANiTMa+V2bbwyR8Z2o86m7gUg="
      public-key: "KqOQG90uvqVWGHwLW+Z5tH019Qt5QcIhpKitIovkviA="

  tasks:
    - name: gather service facts
      ansible.builtin.service_facts:

    - name: check if NetworkManager service are enabled and running
      ansible.builtin.assert:
        that:
          - "'NetworkManager.service' in ansible_facts.services"
          - "ansible_facts.services['NetworkManager.service'].state == 'running'"
          - "ansible_facts.services['NetworkManager.service'].status == 'enabled'"

    - name: read wireguard config
      ansible.builtin.slurp:
        src: "/etc/NetworkManager/system-connections/wg_test.nmconnection"
      register: wg_config_encoded

    - name: set wg config var
      ansible.builtin.set_fact:
        wg_config: "{{ wg_config_encoded.content | b64decode }}"

    - name: check wireguard config
      ansible.builtin.assert:
        that:
          - ifname in wg_config
          - ip4 in wg_config
          - wireguard['peer'] in wg_config
          - wireguard['peer-port'] in wg_config
          - wireguard['allowed-ips'] in wg_config
          - wireguard['private-key'] in wg_config
          - wireguard['public-key'] in wg_config
